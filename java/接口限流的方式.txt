1.计数器算法：
	实现思路：通过AutomicLong的incrementAndGet()方法使计数器+1并返回最新值，然后与阈值相比较
	缺点：	“突刺现象”，如果一个接口限定1s内接受100个请求，而在前10ms接受了100个请求,则在后面的990ms将拒绝所有的请求
	
2.漏桶算法：
	实现思路：通过一个队列存储请求，另用一个线程池定期从队列中取请求进行处理
	缺点：无法应对短时间的突发流量
	
3.令牌桶算法：
	实现思路：使用一个队列保存可用的令牌，并通过一个线程池定期生成令牌放入队列中，每当一个请求到来时，则先取得一个令牌，然后对其处理
			  通过Google开源的guava包，我们可以很轻松的创建一个令牌桶算法的限流器。
			  
4.集群中的限流：
	通过将计数器放置于第三方服务如redis中，当用户访问某个接口，则对redis中的计数器+1，为redis中的计数器加上定时策略，则可以实现对接口的限流